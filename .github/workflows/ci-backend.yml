name: CI/CD Pipeline for OKE

on:
  push:
    branches:
      - main  # Déclenchement du pipeline sur la branche principale

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout le code source
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Installer OCI CLI
      - name: Set up OCI CLI
        uses: oracle/oci-cli-action@v1
        with:
          oci_api_key: ${{ secrets.OCI_API_KEY }}
          oci_user_ocid: ${{ secrets.OCI_USER_OCID }}
          oci_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
          oci_region: ${{ secrets.OCI_REGION }}

      # Step 3: Configurer le contexte Kubernetes
      - name: Set up Kubernetes context
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > ~/.kube/config

      # Step 4: Construire l'image Docker
      - name: Build Docker image
        run: |
          IMAGE_NAME="eu-paris-1.ocir.io/axteptc31tuv/my-app:$GITHUB_SHA"
          docker build -t $IMAGE_NAME .

      # Step 5: Se connecter au registre OCI et pousser l'image
      - name: Push Docker image to OCI Registry
        run: |
          OCI_REGISTRY_URL="eu-paris-1.ocir.io/axteptc31tuv"
          echo "${{ secrets.OCI_REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.OCI_REGISTRY_USERNAME }}" --password-stdin $OCI_REGISTRY_URL
          docker push $OCI_REGISTRY_URL/my-app:$GITHUB_SHA

      # Step 6: Déployer sur OKE
      - name: Deploy to OKE
        run: |
          kubectl set image deployment/my-deployment my-app=$OCI_REGISTRY_URL/my-app:$GITHUB_SHA
          kubectl rollout status deployment/my-deployment

      # Step 7: Nettoyage
      - name: Clean up
        run: docker logout
