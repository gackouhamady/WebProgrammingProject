name: Java CI/CD

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x BackEnd/car-rental/gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('BackEnd/car-rental/**/*.gradle*', 'BackEnd/car-rental/**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Build and Test
        working-directory: BackEnd/car-rental
        run: |
          ./gradlew build
          ./gradlew test

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker image
        run: |
          IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/rentalservice:${{ github.sha }}
          docker build -t $IMAGE_TAG BackEnd/car-rental
          docker push $IMAGE_TAG



    name: Deploy to Oracle Kubernetes

    on:
      pull_request:
        branches:
          - main

    jobs:
      deploy:
        runs-on: ubuntu-latest

        steps:
          # Checkout le code du repository
          - name: Checkout repository
            uses: actions/checkout@v3

          # Installer kubectl
          - name: Install kubectl
            uses: azure/setup-kubectl@v3
            with:
              version: 'latest'

          # Configure kubeconfig avec votre fichier Kubernetes
          - name: Configure kubeconfig
            run: |
              mkdir -p ~/.kube
              echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
              export KUBECONFIG=~/.kube/config
              kubectl config use-context context-c3ibmeixkha

          # Test de la connexion au cluster Kubernetes
          - name: Test Kubernetes Connection
            run: |
              kubectl cluster-info
              kubectl get nodes

          # Déployer l'application sur Kubernetes
          - name: Deploy to Oracle Kubernetes
            run: |
              kubectl apply -f BackEnd/k8s/car-rental-deployement.yml

          # Vérification du déploiement
          - name: Verify Deployment
            run: kubectl rollout status deployment/rentalservice

          # Vérification des Pods
          - name: Verify Pods are Running
            run: kubectl get pods -o wide
